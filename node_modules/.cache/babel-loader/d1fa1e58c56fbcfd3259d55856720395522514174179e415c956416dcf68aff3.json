{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wave\\\\my-first-object\\\\src\\\\components\\\\AddForms.js\",\n  _s = $RefreshSig$();\nimport { Button, Form } from 'react-bootstrap';\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddFormat = _ref => {\n  _s();\n  let {\n    addEmployee\n  } = _ref;\n  const [newEmploye, setnewEmploye] = useState({\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phone: \"\"\n  });\n  const onInputChange = e => {\n    setnewEmploye({\n      ...newEmploye,\n      [e.target.name]: e.target.value\n    });\n  };\n  const {\n    name,\n    email,\n    address,\n    phone\n  } = newEmploye;\n  const handlerSubmit = e => {\n    e.preventDefault();\n    addEmployee(name, email, address, phone);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handlerSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: '10px'\n        },\n        type: \"text\",\n        placeholder: \"Name *\",\n        name: \"name\",\n        value: name,\n        onChange: e => onInputChange(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: '10px'\n        },\n        type: \"email\",\n        placeholder: \"Email *\",\n        name: \"email\",\n        value: email,\n        onChange: e => onInputChange(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: '10px'\n        },\n        as: \"textarea\",\n        placeholder: \"Address\",\n        name: \"address\",\n        value: address,\n        onChange: e => onInputChange(e.target.value),\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: '10px'\n        },\n        type: \"text\",\n        placeholder: \"phone\",\n        Address: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-success\",\n      type: \"submit\",\n      block: true,\n      children: \"Add New Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this);\n};\n_s(AddFormat, \"hF6duKtvDQ3afY5obVwI5vGdtfE=\");\n_c = AddFormat;\nexport default AddFormat;\nvar _c;\n$RefreshReg$(_c, \"AddFormat\");","map":{"version":3,"names":["Button","Form","useState","React","AddFormat","addEmployee","newEmploye","setnewEmploye","name","email","address","phone","onInputChange","e","target","value","handlerSubmit","preventDefault","margin"],"sources":["C:/Users/Wave/my-first-object/src/components/AddForms.js"],"sourcesContent":["import { Button,Form } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\n const AddFormat = ({addEmployee}) => {\r\n    const [newEmploye, setnewEmploye] = useState(\r\n        {name:\"\",email:\"\",address:\"\",phone:\"\"\r\n    });\r\n    const onInputChange = (e) =>{\r\n        setnewEmploye({...newEmploye,[e.target.name]:e.target.value})\r\n    }\r\n    const {name , email , address , phone} = newEmploye;\r\n\r\n    const handlerSubmit = (e) =>{\r\n        e.preventDefault();\r\n        addEmployee(name,email,address,phone);\r\n    }\r\n  return (\r\n    \r\n<Form onSubmit={handlerSubmit}>\r\n    <Form.Group>\r\n        <Form.Control\r\n        style={{margin:'10px'}}\r\n            type=\"text\"\r\n            placeholder=\"Name *\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange= {(e)=>onInputChange(e.target.value)}\r\n            required />\r\n    </Form.Group>\r\n\r\n    <Form.Group>\r\n        <Form.Control\r\n        style={{margin:'10px'}}\r\n            type=\"email\"\r\n            placeholder=\"Email *\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange= {(e)=>onInputChange(e.target.value)}\r\n            required />\r\n    </Form.Group>\r\n\r\n    <Form.Group>\r\n        <Form.Control\r\n        style={{margin:'10px'}}\r\n            as=\"textarea\"\r\n            placeholder=\"Address\"\r\n            name=\"address\"\r\n            value={address}\r\n            onChange= {(e)=>onInputChange(e.target.value)}\r\n            rows={3} />\r\n    </Form.Group>\r\n\r\n    <Form.Group>\r\n        <Form.Control\r\n        style={{margin:'10px'}}\r\n            type=\"text\"\r\n            placeholder=\"phone\"\r\n            Address\r\n             />\r\n    </Form.Group>\r\n\r\n    <Button variant=\"outline-success\" type=\"submit\" block>\r\n        Add New Employee\r\n    </Button>\r\n </Form>\r\n \r\n  )\r\n}\r\nexport default AddFormat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}